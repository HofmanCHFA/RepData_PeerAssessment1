#We already have our fata on Baltimore subsetted
BaltimoreType <- BaltimoreDF %>%
group_by(year,type) %>%
summarise(Emissions = sum(as.numeric(as.character(Emissions))))
ggplot(data = BaltimoreType, aes(factor(year),Emissions, col = type)) + geom_point()
ggplot(data = BaltimoreType, aes(factor(year),Emissions, col = type)) + geom_point()
+ geom_line()
ggplot(data = BaltimoreType, aes(factor(year),Emissions, col = type)) + geom_point() + geom_line()
ggplot(data = BaltimoreType, aes(factor(year),Emissions, col = type)) + geom_line()
ggplot(data = BaltimoreType, aes(year,Emissions, col = type)) + geom_line()
ggplot(data = BaltimoreType, aes(year,Emissions, col = type)) + geom_point()+ geom_line()
ggplot(data = BaltimoreType, aes(year,Emissions, col = type)) + geom_point()+ geom_line() +
ggtitle(ggtitle(expression("Total Baltimore " ~ PM[2.5] ~ "Emissions by Type and Year")))
ggplot(data = BaltimoreType, aes(year,Emissions, col = type)) + geom_point()+ geom_line() +
ggtitle(expression("Total Baltimore " ~ PM[2.5] ~ "Emissions by Type and Year"))
ggplot(data = BaltimoreType, aes(year,Emissions, col = type)) + geom_point()+ geom_line() +
ggtitle("Total Baltimore " ~ PM[2.5] ~ "Emissions by Type and Year")
ggplot(data = BaltimoreType, aes(year,Emissions, col = type)) + geom_point()+ geom_line() +
ggtitle("Total Baltimore " ~ PM[2.5] ~ "Emissions by Type and Year") + +
ylab("Total Baltimore " ~ PM[2.5] ~ "Emissions") +
xlab("Year") +
scale_colour_discrete(name = "Type of sources") +
)
ggplot(data = BaltimoreType, aes(year,Emissions, col = type)) + geom_point()+ geom_line() +
ggtitle("Total Baltimore " ~ PM[2.5] ~ "Emissions by Type and Year") + +
ylab("Total Baltimore " ~ PM[2.5] ~ "Emissions") +
xlab("Year") +
scale_colour_discrete(name = "Type of sources")
ggplot(data = BaltimoreType, aes(year,Emissions, col = type)) + geom_point()+ geom_line() +
ggtitle("Total Baltimore " ~ PM[2.5] ~ "Emissions by Type and Year") + +
ylab("Total Baltimore " ~ PM[2.5] ~ "Emissions") +
xlab("Year") +
scale_colour_discrete(name = "Type of sources")
ggplot(data = BaltimoreType, aes(year,Emissions, col = type)) + geom_point()+ geom_line() +
ggtitle("Total Baltimore " ~ PM[2.5] ~ "Emissions by Type and Year") +
ylab("Total Baltimore " ~ PM[2.5] ~ "Emissions") +
xlab("Year") +
scale_colour_discrete(name = "Type of sources")
ggplot(data = BaltimoreType, aes(year,Emissions, col = type)) + geom_point()+ geom_line() +
ggtitle("Total Baltimore " ~ PM[2.5] ~ "Emissions by Type and Year") +
ylab( ~ PM[2.5] ~ "Emissions") +
xlab("Year") +
scale_colour_discrete(name = "Type of sources")
str(SCC)
# Use grepl to searcg for the string "coal" in the SCC data frame
SCCcoalemissions <- SCC[grepl("coal", SCC$Short.Name, ignore.case=TRUE),]
#Merge the SCCcoalemissions and SCC into a single data frame
CoalEmissions <- merge(NEI, SCCcoalemissions, by = "SCC")
# Aggregate total coal emissions
CEPM2.5 <- aggregate(CoalEmissions[, "Emissions"], by = list(CoalEmissions$year), sum)
colnames(CEPM2.5) <- c("year", "Emissions")
#Now let's plot it
ggplot(CEPM2.5, aes(x = year, y = Emissions/10^6)) +
geom_line(aes(group = 1, col = Emissions)) + geom_point(aes(size = 1, col = Emissions)) +
ylab(expression(~ PM[2.5] ~ "Emissions (millions of tons)")) + xlab("Year") +
ggtitle("Total Coal emissions (1999-2008)")
#Now let's plot it
ggplot(CEPM2.5, aes(x = year, y = Emissions/10^6)) +
geom_line(aes(group = 1)) + geom_point(aes(size = 1, col = Emissions)) +
ylab(expression(~ PM[2.5] ~ "Emissions (millions of tons)")) + xlab("Year") +
ggtitle("Total Coal emissions (1999-2008)")
#Now let's plot it
ggplot(CEPM2.5, aes(x = year, y = Emissions/10^6)) +
geom_line(aes(group = 1)) + geom_point(aes(size = 1)) +
ylab(expression(~ PM[2.5] ~ "Emissions (millions of tons)")) + xlab("Year") +
ggtitle("Total Coal emissions (1999-2008)")
#Now let's plot it
ggplot(CEPM2.5, aes(x = year, y = Emissions/10^6)) +
geom_line() + geom_point() +
ylab(expression(~ PM[2.5] ~ "Emissions (millions of tons)")) + xlab("Year") +
ggtitle("Total Coal emissions (1999-2008)")
#Now let's plot it
ggplot(CEPM2.5, aes(x = year, y = Emissions/10^3)) +
geom_line() + geom_point() +
ylab(expression(~ PM[2.5] ~ "Emissions (kilotons)")) + xlab("Year") +
ggtitle("Total Coal emissions (1999-2008)")
#Now let's plot it
ggplot(CEPM2.5, aes(x = year, y = Emissions/10^3)) +
geom_line() + geom_point() +
ylab(expression(~ PM[2.5] ~ "Emissions (kilotons)")) + xlab("Year") +
ggtitle("Total Coal emissions (1999-2008)") + theme_classic()
#Now let's plot it
ggplot(CEPM2.5, aes(x = year, y = Emissions/10^3)) +
geom_line() + geom_point() +
ylab(expression(~ PM[2.5] ~ "Emissions (kilotons)")) + xlab("Year") +
ggtitle("Total Coal emissions (1999-2008)") + theme_gray()
#Now let's plot it
ggplot(CEPM2.5, aes(x = year, y = Emissions/10^3, col = blue)) +
geom_line() + geom_point() +
ylab(expression(~ PM[2.5] ~ "Emissions (kilotons)")) + xlab("Year") +
ggtitle("Total Coal emissions (1999-2008)") + theme_gray()
#Now let's plot it
ggplot(CEPM2.5, aes(x = year, y = Emissions/10^3, col = "blue")) +
geom_line() + geom_point() +
ylab(expression(~ PM[2.5] ~ "Emissions (kilotons)")) + xlab("Year") +
ggtitle("Total Coal emissions (1999-2008)") + theme_gray()
#Now let's plot it
ggplot(CEPM2.5, aes(x = year, y = Emissions/10^3, col = "coal")) +
geom_line() + geom_point() +
ylab(expression(~ PM[2.5] ~ "Emissions (kilotons)")) + xlab("Year") +
ggtitle("Total Coal emissions (1999-2008)") + theme_gray()
#Now let's plot it
ggplot(CEPM2.5, aes(x = year, y = Emissions/10^3)) +
geom_line() + geom_point() +
ylab(expression(~ PM[2.5] ~ "Emissions (kilotons)")) + xlab("Year") +
ggtitle("Total Coal emissions (1999-2008)") + theme_gray()
#Now let's plot it
ggplot(CEPM2.5, aes(x = year, y = Emissions/10^3)) +
geom_line(col = "dark gray") + geom_point() +
ylab(expression(~ PM[2.5] ~ "Emissions (kilotons)")) + xlab("Year") +
ggtitle("Total Coal emissions (1999-2008)") + theme_gray()
#5. How have emissions from motor vehicle sources changed from 1999–2008 in Baltimore City?
Baltimore <- subset(NEI, fips == "24510" & type == "ON-ROAD")
#5. How have emissions from motor vehicle sources changed from 1999–2008 in Baltimore City?
Baltimore <- subset(BaltimoreDF, type == "ON-ROAD")
View(Baltimore)
View(Baltimore)
remove(Baltimore)
#5. How have emissions from motor vehicle sources changed from 1999–2008 in Baltimore City?
BaltimoreVehicular <- subset(BaltimoreDF, type == "ON-ROAD")
str(BaltimoreVehicular)
BaltimoreVehicularPM2.5 <- aggregate(BaltimoreVehicular[, "Emissions"], by = list(BaltimoreVehicular$year), sum)
colnames(BaltimoreVehicularPM2.5) <- c("year", "Emissions")
#Now plot it
ggplot(BaltimoreVehicularPM2.5, aes(x = year, y = Emissions)) + geom_bar(aes(fill=year), stat="identity") +
ylab(expression("Emissions of PM"[2.5]* " (in tons)")) + xlab("Year") +
ggtitle("Total Emissions of Motor Vehicles in Baltimore") +
geom_text(aes(label = round(Emissions), size = 3, hjust = 1, vjust = 0))
#Now plot it
ggplot(BaltimoreVehicularPM2.5, aes(x = year, y = Emissions)) + geom_point(aes(fill=year), stat="identity") +
ylab(expression("PM"[2.5]* "Emissions (in tons)")) + xlab("Year") +
ggtitle("Total Vehicular Emissions in Baltimore") +
geom_text(aes(label = round(Emissions), size = 3, hjust = 1, vjust = 0))
#Now plot it
ggplot(BaltimoreVehicularPM2.5, aes(x = year, y = Emissions)) + geom_point() +
ylab(expression("PM"[2.5]* "Emissions (in tons)")) + xlab("Year") +
ggtitle("Total Vehicular Emissions in Baltimore") +
geom_text(aes(label = round(Emissions), size = 3, hjust = 1, vjust = 0))
#Now plot it
ggplot(BaltimoreVehicularPM2.5, aes(x = year, y = Emissions)) + geom_point() + geom_line()+
ylab(expression("PM"[2.5]* "Emissions (in tons)")) + xlab("Year") +
ggtitle("Total Vehicular Emissions in Baltimore") +
geom_text(aes(label = round(Emissions), size = 3, hjust = 1, vjust = 0))
#Now plot it
ggplot(BaltimoreVehicularPM2.5, aes(x = year, y = Emissions)) + geom_point() + geom_line()+
ylab(expression("PM"[2.5]* "Emissions (in tons)")) + xlab("Year") +
ggtitle("Total Vehicular Emissions in Baltimore")
#Now plot it
ggplot(BaltimoreVehicularPM2.5, aes(x = year, y = Emissions)) + geom_point(aes(pch = 2, col = "red")) + geom_line()+
ylab(expression("PM"[2.5]* "Emissions (in tons)")) + xlab("Year") +
ggtitle("Total Vehicular Emissions in Baltimore")
#Now plot it
ggplot(BaltimoreVehicularPM2.5, aes(x = year, y = Emissions)) + geom_point() + geom_line()+
ylab(expression("PM"[2.5]* "Emissions (in tons)")) + xlab("Year") +
ggtitle("Total Vehicular Emissions in Baltimore")
# Aggregate vehicular emissions in Baltimore
BaltimoreVehicular <- subset(NEI, fips == "24510" & type == "ON-ROAD")
BaltimoreVehicularPM2.5 <- cbind(aggregate(BaltimoreVehicular[, "Emissions"], by = list(Baltimore$year), sum), City = "Baltimore")
colnames(BaltimoreVehicularPM2.5) <- c("year", "Emissions", "City")
# Aggregate vehicular emissions in Baltimore
BaltimoreVehicular <- subset(NEI, fips == "24510" & type == "ON-ROAD")
BaltimoreVehicularPM2.5 <- cbind(aggregate(BaltimoreVehicular[, "Emissions"], by = list(BaltimoreVehicular$year), sum), City = "Baltimore")
colnames(BaltimoreVehicularPM2.5) <- c("year", "Emissions", "City")
# Aggregate vehicular emissions in Los Angeles
LosAngelesVehicular <- subset(NEI, fips == "06037" & type == "ON-ROAD")
LosAngelesVehicularPM2.5 <- cbind(aggregate(LosAngelesVehicular[, "Emissions"], by = list(LosAngelesVehicular$year), sum), City = "Los Angeles")
colnames(LosAngelesVehicularPM2.5) <- c("year", "Emissions", "City")
#Join the data
BalimoreVSLA <- rbind.data.frame (BaltimoreVehicularPM2.5, LosAngelesVehicularVehicularPM2.5)
#Join the data
BalimoreVSLA <- rbind.data.frame (BaltimoreVehicularPM2.5, LosAngelesVehicularPM2.5)
#Join the data
BaltimoreVSLA <- rbind.data.frame (BaltimoreVehicularPM2.5, LosAngelesVehicularPM2.5)
#Now Plot it
# Plot bar chart for comparison
ggplot(BaltimoreVSLA, aes(year, Emissions)) + geom_bar(aes(fill = year), stat = "identity") + facet_grid(. ~ City) +
ggtitle("Total Emissions from motor vehicles in Baltimore and in Los Angeles") +
ylab(expression("Emissions of PM"[2.5]* " (in tons)")) + xlab("Year") +
geom_text(aes(label=round(Emissions), size = 2, hjust = 1, vjust = -1))
#Now Plot it
# Plot bar chart for comparison
ggplot(BaltimoreVSLA, aes(x = year, y = Emissions)) + geom_line() + facet_grid(. ~ City) +
ggtitle("Total Emissions from motor vehicles in Baltimore and in Los Angeles") +
ylab(expression("Emissions of PM"[2.5]* " (in tons)")) + xlab("Year") +
geom_text(aes(label=round(Emissions), size = 2, hjust = 1, vjust = -1))
#Now Plot it
# Plot bar chart for comparison
ggplot(BaltimoreVSLA, aes(x = year, y = Emissions)) + geom_line() + facet_grid(. ~ City) +
ggtitle("Total Emissions from motor vehicles in Baltimore and in Los Angeles") +
ylab(expression("Emissions of PM"[2.5]* " (in tons)")) + xlab("Year")
#Now Plot it
# Plot bar chart for comparison
ggplot(BaltimoreVSLA, aes(x = year, y = Emissions, col = "City")) + geom_line() + facet_grid(. ~ City) +
ggtitle("Total Emissions from motor vehicles in Baltimore and in Los Angeles") +
ylab(expression("Emissions of PM"[2.5]* " (in tons)")) + xlab("Year")
#Now Plot it
# Plot bar chart for comparison
ggplot(BaltimoreVSLA, aes(x = year, y = Emissions, col = "City")) + geom_line() + facet_grid(. ~ City) +
ggtitle("Total Vehicular Emissions in Baltimore and in Los Angeles") +
ylab(expression("Emissions of PM"[2.5]* " (in tons)")) + xlab("Year")
#Now Plot it
# Plot bar chart for comparison
ggplot(BaltimoreVSLA, aes(x = year, y = Emissions, col = "City")) + geom_line() + facet_grid(. ~ City) +
ggtitle("Total Vehicular Emissions in Baltimore and in Los Angeles") +
ylab(expression("PM"[2.5]* " emissions (in tons)")) + xlab("Year")
ggplot(BaltimoreVSLA, aes(x = year, y = Emissions, col = "City")) + geom_line() +
ggtitle("Total Vehicular Emissions in Baltimore and in Los Angeles") +
ylab(expression("PM"[2.5]* " emissions (in tons)")) + xlab("Year")
ggplot(BaltimoreVSLA, aes(x = year, y = Emissions, col = City)) + geom_line() +
ggtitle("Total Vehicular Emissions in Baltimore and in Los Angeles") +
ylab(expression("PM"[2.5]* " emissions (in tons)")) + xlab("Year")
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#Using aggregate let's create the sums of all emissions for each year
totalemissions <- aggregate(Emissions ~ year, NEI, sum)
#Let's take a look at it
totalemissions
#Now let's plot it, I adjusted the scale to millions of tons to get a better looking graph
with(totalemissions, plot(year, Emissions/10^6, type= "o", col = "red", main = expression("Emissions by Year"),
ylab = expression("Total US "~   PM[2.5] ~ "Emissions (Million tons)"), xlab = "Year"))
#First let's get the data for Baltimore, Maryland
BaltimoreDF <- subset(NEI, fips == "24510")
#now let's repeat the same approuch as before
Baltimore.emissions <- aggregate(Emissions ~ year, BaltimoreDF, sum)
with(Baltimore.emissions, plot(year, Emissions/10^6, type= "o", col = "red",
main = expression("Baltimore's Emissions by Year"),
ylab = expression("Total US "~   PM[2.5] ~ "Emissions (Million tons)"), xlab = "Year"))
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#First let's get the data for Baltimore, Maryland
BaltimoreDF <- subset(NEI, fips == "24510")
#now let's repeat the same approuch as before
Baltimore.emissions <- aggregate(Emissions ~ year, BaltimoreDF, sum)
with(Baltimore.emissions, plot(year, Emissions/10^6, type= "o", col = "red",
main = expression("Baltimore's Emissions by Year"),
ylab = expression("Total US "~   PM[2.5] ~ "Emissions (Million tons)"), xlab = "Year"))
remove(Baltimore.emissions, BaltimoreDF)
#First let's get the data for Baltimore, Maryland
BaltimoreDF <- subset(NEI, fips == "24510")
#first let's call ggplot2 and other utilities with the Tidyverse package
library(tidyverse)
#We already have our fata on Baltimore subsetted, but we use dplyer to get the sums of emissions by
#year and type
BaltimoreType <- BaltimoreDF %>%
group_by(year,type) %>%
summarise(Emissions = sum(as.numeric(as.character(Emissions))))
#Now we plot it
ggplot(data = BaltimoreType, aes(year,Emissions, col = type)) + geom_point()+ geom_line() +
ggtitle("Total Baltimore " ~ PM[2.5] ~ "Emissions by Type and Year") +
ylab( ~ PM[2.5] ~ "Emissions") +
xlab("Year") +
scale_colour_discrete(name = "Type of source")
remove(BaltimoreDF, BaltimoreType)
# Use grepl to searcg for the string "coal" in the SCC data frame
SCCcoalemissions <- SCC[grepl("coal", SCC$Short.Name, ignore.case=TRUE),]
#Merge the SCCcoalemissions and SCC into a single data frame
CoalEmissions <- merge(NEI, SCCcoalemissions, by = "SCC")
# Aggregate total coal emissions
CEPM2.5 <- aggregate(CoalEmissions[, "Emissions"], by = list(CoalEmissions$year), sum)
colnames(CEPM2.5) <- c("year", "Emissions")
#Now let's plot it
ggplot(CEPM2.5, aes(x = year, y = Emissions/10^3)) +
geom_line() + geom_point() +
ylab(expression(~ PM[2.5] ~ "Emissions (kilotons)")) + xlab("Year") +
ggtitle("Total Coal emissions (1999-2008)") + theme_gray()
#5. How have emissions from motor vehicle sources changed from 1999–2008 in Baltimore City?
#First let's get the data for Baltimore, Maryland
BaltimoreDF <- subset(NEI, fips == "24510")
#Get vehicular data
BaltimoreVehicular <- subset(BaltimoreDF, type == "ON-ROAD")
#Aggregate it by year
BaltimoreVehicularPM2.5 <- aggregate(BaltimoreVehicular[, "Emissions"], by = list(BaltimoreVehicular$year), sum)
colnames(BaltimoreVehicularPM2.5) <- c("year", "Emissions")
#Now plot it
ggplot(BaltimoreVehicularPM2.5, aes(x = year, y = Emissions)) + geom_point() + geom_line()+
ylab(expression("PM"[2.5]* "Emissions (in tons)")) + xlab("Year") +
ggtitle("Total Vehicular Emissions in Baltimore")
View(BaltimoreDF)
remove(BaltimoreDF, BaltimoreVehicular, BaltimoreVehicularPM2.5, CEPM2.5, CoalEmissions, SCCcoalemissions)
# Aggregate vehicular emissions in Baltimore
BaltimoreVehicular <- subset(NEI, fips == "24510" & type == "ON-ROAD")
BaltimoreVehicularPM2.5 <- cbind(aggregate(BaltimoreVehicular[, "Emissions"], by = list(BaltimoreVehicular$year), sum), City = "Baltimore")
colnames(BaltimoreVehicularPM2.5) <- c("year", "Emissions", "City")
# Aggregate vehicular emissions in Los Angeles
LosAngelesVehicular <- subset(NEI, fips == "06037" & type == "ON-ROAD")
LosAngelesVehicularPM2.5 <- cbind(aggregate(LosAngelesVehicular[, "Emissions"], by = list(LosAngelesVehicular$year), sum), City = "Los Angeles")
colnames(LosAngelesVehicularPM2.5) <- c("year", "Emissions", "City")
#Join the data
BaltimoreVSLA <- rbind.data.frame (BaltimoreVehicularPM2.5, LosAngelesVehicularPM2.5)
#Now Plot it
ggplot(BaltimoreVSLA, aes(x = year, y = Emissions, col = City)) + geom_line() +
ggtitle("Total Vehicular Emissions in Baltimore and in Los Angeles") +
ylab(expression("PM"[2.5]* " emissions (in tons)")) + xlab("Year")
knitr::opts_chunk$set(echo = TRUE)
activityData <- read.csv(file="activity.csv", header=TRUE)
df <- read.csv(file="activity.csv", header=TRUE)
df <- read.csv(file="activity.csv", header=TRUE)
df <- read.csv(file="activity.csv", header=TRUE)
setwd("C:/Users/caioh/OneDrive/Desktop/Coursera/Reproducible Research")
df <- read.csv(file="activity.csv", header=TRUE)
df <- read.csv(file="activity.csv", header=TRUE)
str(df)
$date
df$date
df$date <- as.Date(df$date, "Y%m%d")
str(df)
df$date <- as.Date(df$date, "Y%m%d")
df$date
df <- read.csv(file="activity.csv", header=TRUE)
str(df)
df$date <- as.Date(df$date)
str(df)
aggregate(steps ~ date, activityData, FUN=sum)
aggregate(steps ~ date, df, FUN=sum)
df$TSTEPS <- aggregate(steps ~ date, df, FUN=sum)
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = date, y steps)) + barplot()
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = date, y steps)) + barplot()
ggplot(meansteps, aes(x = date, y steps)) + barplot()
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = date, y = steps)) + barplot()
ggplot(meansteps, aes(x = date, y = steps)) + barplot()
ggplot(meansteps, aes(steps)) + hist()
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = steps)) + hist()
ggplot(meansteps, aes(x = steps)) + hist()
ggplot(meansteps, aes(x = steps)) + geom_hist()
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = steps)) + geom_hist()
library(tidyverse)
ggplot(meansteps, aes(x = steps)) + geom_hist()
ggplot(meansteps, aes(x = steps)) + geom_histogram()
sum(df$steps)
sum(df$steps, na.rm = TRUE)
ggplot(meansteps, aes(x = steps)) + geom_histogram(binwidth = 5)
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = steps)) + geom_histogram(binwidth = 20 )
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = steps)) + geom_histogram(binwidth = 1 )
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = steps)) + geom_histogram(binwidth = 2 )
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = steps)) + geom_histogram(binwidth = 50 )
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = steps)) + geom_histogram(binwidth = 100 )
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = steps)) + geom_histogram(binwidth = 1000 )
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = steps)) + geom_histogram(binwidth = 2000 )
meanSteps <- mean(totalSteps$steps, na.rm = TRUE)
meanSteps <- mean(df$steps, na.rm = TRUE)
medSteps <- median(df$steps, na.rm = TRUE)
mean
mean(df$steps, na.rm = TRUE)
median(df$steps, na.rm = TRUE)
median(df$steps, na.rm = T)
df$steps
table(df$steps)
hist(df$steps)
summary(df$steps)
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = steps)) + geom_histogram(binwidth = 2000 ) + ggtitle("Histogram Steps Count")
ggplot(meansteps, aes(x = steps)) + geom_histogram(binwidth = 2000 ) + ggtitle("Histogram Steps Count")
meanstepsint <- aggregate(steps ~ interval, df, mean)
ggplot(data = meanstepsint, aes(x = interval, y = steps)) + geom_line() +
ggtitle("Daily Activity Pattern") +
xlab("5min Interval") +
ylab("Average Number of Steps") +
theme(plot.title = element_text(hjust = 0.5))
meanstepsint <- aggregate(steps ~ interval, df, mean)
ggplot(data = meanstepsint, aes(x = interval, y = steps)) + geom_line() +
ggtitle("Daily Activity Pattern") +
xlab("5min Interval") +
ylab("Average Number of Steps")
maxsteps5min <- meanstepsint[which.max(meanStepsByInt$steps),]
maxsteps5min <- meanstepsint[which.max(meanstepsint$steps),]
maxsteps5min
summary(df$steps)
mean(df$steps, na.rm = TRUE)
median(df$steps, na.rm = TRUE)
summary(meansteps$steps)
mean(meansteps$steps, na.rm = TRUE)
median(meansteps$steps, na.rm = TRUE)
NAcount <- missingVals <- is.na(df$steps)
NAcount
NAcount <- missingVals <- is.na(df$steps)
sum(NAcount)
mod.df <- transform(df, steps = ifelse(is.na(df$steps),
meanstepsint$steps[match(df$interval,
meanstepsint$interval)],
df$steps))
mod.meansteps <- aggregate(steps ~ date, mod.df, FUN=sum)
ggplot(mod.meansteps, aes(x = steps)) + geom_histogram(binwidth = 2000 ) + ggtitle("Histogram Steps Count")
summary(mod.meansteps$steps)
mod.mean <- mean(mod.meansteps$steps, na.rm = TRUE)
mod.mean
mod.median <- median(mod.meansteps$steps, na.rm = TRUE)
mod.median
weekdays(mod.df$date)
daytype <- weekdays(mod.df$date)
ifelse(daytype %in% c('Saturday', 'Sunday'), daytype == "weekend", daytype == "weekday")
ifelse(daytype == 'Saturday' | daytype == 'Sunday', daytype == "weekend", daytype == "weekday")
str(ifelse(daytype == 'Saturday' | daytype == 'Sunday', daytype == "weekend", daytype == "weekday"))
ifelse(daytype == "Saturday" | daytype == "Sunday", daytype == "weekend", daytype == "weekday")
tBLE(ifelse(daytype == "Saturday" | daytype == "Sunday", daytype == "weekend", daytype == "weekday"))
table(ifelse(daytype == "Saturday" | daytype == "Sunday", daytype == "weekend", daytype == "weekday"))
table(ifelse(daytype = "Saturday" | daytype = "Sunday", daytype == "weekend", daytype == "weekday"))
(ifelse(daytype = "Saturday" | daytype = "Sunday", daytype = "weekend", daytype = "weekday")
(ifelse(daytype == "Saturday" | daytype == "Sunday", daytype == "weekend", daytype == "weekday")
)
table(daytype)
mod.df.wends <- subset(mod.df, )
mod.df$daytype <- daytype
mod.df.wends <- subset(mod.df, mod.df$daytype == "Sunday" | daytype == "Saturday")
mod.df.days <- subset(mod.df, mod.df$daytype == "Monday" | daytype == "Tuesday" | daytype == "Wednesday"| daytype == "Thursday"| daytype == "Friday")
TESTE <- merge(mod.df.days, mod.df.wends, by = "date")
TESTE
TESTE <- merge(mod.df, mod.df.wends, by = "date")
summary(TESTE)
mod.df.days$daytype2 <- "weekday"
mod.df.wends$daytype2 <- "weekend"
TESTE <- merge(mod.df, mod.df.wends, by = "date")
TESTE <- rbind(mod.df, mod.df.days)
table(TESTE)
summary(TESTE)
TESTE <- merge(mod.df, mod.df.wends, by = "date", all.x = TRUE)
TESTE <- merge(mod.df, mod.df.wends, intersect(names(mod.df), names(mod.df.wends)))
TESTE <- merge(mod.df, mod.df.wends, intersect(names(mod.df), names(mod.df.wends)), all.x = TRUE)
TESTE <- merge(mod.df, mod.df.days, intersect(names(mod.df), names(mod.df.days)), all.x = TRUE)
str(TESTE)
table(TESTE$daytype2)
table(TESTE$daytype2, useNA = "always")
TESTE <- transform(TESTE, daytype2 = ifelse(is.na(TESTE$daytype2), "weekend"))
TESTE <- transform(TESTE, daytype2 = ifelse(is.na(TESTE$daytype2), "weekend", "weekday"))
table(TESTE$daytype2, useNA = "always")
remove(mod.df.days, mod.df.wends)
mod.df.wends <- subset(mod.df, mod.df$daytype == "Sunday" | daytype == "Saturday")
mod.df.wends$daytype2 <- "weekend"
mod.df2 <- merge(mod.df, mod.df.wends, intersect(names(mod.df), names(mod.df.wends)), all.x = TRUE)
TESTE <- transform(mod.df2, daytype2 = ifelse(is.na(mod.df2$daytype2), "weekday", "weekdend"))
table(TESTE$daytype2)
table(TESTE$daytype2, TESTE$daytype)
#Kind of a messy solution, but it worked
mod.df.wends <- subset(mod.df, mod.df$daytype == "Sunday" | daytype == "Saturday")
mod.df.wends$daytype2 <- "weekend"
mod.df2 <- merge(mod.df, mod.df.wends, intersect(names(mod.df), names(mod.df.wends)), all.x = TRUE)
mod.df2 <- transform(mod.df2, daytype2 = ifelse(is.na(mod.df2$daytype2), "weekday", "weekdend"))
mod.meansteps2 <- aggregate(steps ~ date, mod.df2, FUN=sum)
ggplot(mod.meansteps2, aes(x = steps)) + geom_histogram(binwidth = 2000 ) + ggtitle("Histogram Steps Count")
summary(mod.meansteps2$steps)
mod.mean2 <- mean(mod.meansteps2$steps, na.rm = TRUE)
mod.mean2
mod.median2 <- median(mod.meansteps2$steps, na.rm = TRUE)
mod.median2
meanStepsByDay2 <- aggregate(steps ~ interval + day, mod.df2, mean)
meanStepsByDay2 <- aggregate(steps ~ interval + daytype2, mod.df2, mean)
ggplot(data = meanStepsByDay2, aes(x = interval, y = steps)) +
geom_line() +
facet_grid(daytype2 ~ .) +
ggtitle("Average Daily Activity Pattern") +
xlab("5-minute Interval") +
ylab("Average Number of Steps") +
table(mod.meansteps2)
head(mod.meansteps2)
meanstepsbyday2 <- aggregate(steps ~ interval + daytype2, mod.df2, mean)
ggplot(data = meanStepsByDay2, aes(x = interval, y = steps)) +
geom_line() +
facet_grid(daytype2 ~ .) +
ggtitle("Average Daily Activity Pattern") +
xlab("5-minute Interval") +
ylab("Average Number of Steps") +
head(mod.meansteps2)
head(mod.df2)
meanstepsbyday2 <- aggregate(steps ~ interval + daytype2, mod.df2, mean)
meanstepsbyday2
ggplot(data = meanStepsByDay2, aes(x = interval, y = steps)) +
geom_line() +
facet_grid(daytype2 ~ .)
meanstepsbyday2 <- aggregate(steps ~ interval + daytype2, mod.df2, mean)
ggplot(data = meanStepsByDay2, aes(x = interval, y = steps)) +
geom_line() +
facet_grid(daytype2 ~ .) +
ggtitle("Daily Activity Pattern") +
xlab("5-minute Interval") +
ylab("Average Number of Steps")
meanstepsint <- aggregate(steps ~ interval, df, mean)
ggplot(data = meanstepsint, aes(x = interval, y = steps)) + geom_line() +
ggtitle("Daily Activity Pattern") +
xlab("5min Interval") +
ylab("Average Number of Steps")
df <- read.csv(file="activity.csv", header=TRUE)
str(df)
library(tidyverse)
df$date <- as.Date(df$date)
str(df)
sum(df$steps, na.rm = TRUE)
meansteps <- aggregate(steps ~ date, df, FUN=sum)
ggplot(meansteps, aes(x = steps)) + geom_histogram(binwidth = 2000 ) + ggtitle("Histogram Steps Count")
summary(meansteps$steps)
mean <- mean(meansteps$steps, na.rm = TRUE)
mean
median <- median(meansteps$steps, na.rm = TRUE)
median
meanstepsint <- aggregate(steps ~ interval, df, mean)
meanstepsint <- aggregate(steps ~ interval, df, FUN = mean)
meanstepsint <- aggregate(steps ~ interval, df, FUN = mean)
meansteps <- aggregate(steps ~ interval, df, FUN=sum)
meanstepsint <- aggregate(steps ~ interval, df, FUN = mean)
meanstepsint <- aggregate(steps ~ interval, df, mean)
